{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["AddButton","props","state","id","Math","floor","Date","now","title","text","onCreateMark","bind","newId","this","setState","localStorage","setItem","JSON","stringify","onAddMark","className","onClick","children","React","Component","EditButton","onEditEnable","style","DeleteButton","onDeleteMark","e","stopPropagation","removeItem","markId","type","MarkButton","onSelectMark","mark","parse","getItem","onChangeMark","substr","EditArea","currentId","xPos","yPos","xPosGlobal","yPosGlobal","caretPos","caretSet","selector","onTextChange","onTextClick","onEdit","editNow","target","name","otherInput","defaultValue","value","onEditMark","range","window","getSelection","getRangeAt","preCaret","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","caret","toString","length","parentElement","rect","getBoundingClientRect","clientX","left","clientY","top","onShowEdit","editEnable","document","getElementsByClassName","focus","selectionStart","placeholder","onChange","dangerouslySetInnerHTML","__html","replace","showEdit","position","SearchForm","word","searchd","onChangeSearch","levenshteinDistance","a","b","matrix","i","j","charAt","min","event","titleArray","keyWord","split","toLowerCase","indexOf","prevState","uniqueNames","filter","val","array","onSearchMark","SortForm","sort","showDropdown","onChangeSelect","onOpenDropDown","getAttribute","onChangeSortMark","Area","addButton","searchForm","sortForm","getList","editShow","editButton","deleteButton","editArea","GetList","onChangeActiveMark","marks","map","key","App","loaded","changed","filtered","loadLocalStorage","sortRenderedMark","marksArray","push","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7aa9fd50.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass AddButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {id: Math.floor(Date.now()), title: 'Заголовок заметки ', text: 'Текст заметки'};\n\n        this.onCreateMark = this.onCreateMark.bind(this);\n    }\n\n    onCreateMark() {\n\n        let newId = Math.floor(Date.now());\n        this.setState({id: newId});\n\n        localStorage.setItem('mark' + this.state.id, JSON.stringify(this.state));\n        this.props.onAddMark();\n    };\n\n\n    render() {\n        return <button className='main-area__button' onClick={this.onCreateMark}>{this.props.children}</button>\n    }\n}\n\nclass EditButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onEditEnable = this.onEditEnable.bind(this);\n    }\n\n    onEditEnable() {\n        this.props.onEditEnable();\n    }\n\n    render() {\n        return <button className='main-area__button' onClick={this.onEditEnable}\n                       style={this.props.style ? this.props.style : null}>{this.props.children}</button>\n    }\n}\n\nclass DeleteButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onDeleteMark = this.onDeleteMark.bind(this);\n    }\n\n    onDeleteMark(e) {\n        e.stopPropagation();\n        localStorage.removeItem('mark' + this.props.markId);\n        this.props.onDeleteMark();\n    }\n\n    render() {\n        if (this.props.type === 'normal') {\n            return <button className='main-area__button' onClick={this.onDeleteMark}>{this.props.children}</button>\n        } else if (this.props.type === 'mark') {\n            return (\n                <div className='mark-container__delete-container'>\n                    <div className='delete-container__delete' onClick={this.onDeleteMark}>\n                        Удалить\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nclass MarkButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onSelectMark = this.onSelectMark.bind(this);\n    }\n\n    onSelectMark(e) {\n        e.stopPropagation();\n        const mark = JSON.parse(localStorage.getItem('mark' + this.props.mark.id));\n        this.props.onChangeMark(mark.id, mark.title, mark.text);\n    };\n\n    render() {\n        return (\n            <div className='mark-container__mark' onClick={this.onSelectMark}>\n                <div className='mark-container__title'>\n                    <div className='mark-container__title-text'>\n                        {this.props.mark.title}\n                    </div>\n                    <div className='mark-container__text'>\n                        {this.props.mark.text.substr(0, 80)}\n                    </div>\n                </div>\n                <DeleteButton type={'mark'} markId={this.props.mark.id} onDeleteMark={this.props.onDeleteMark}/>\n\n            </div>\n        )\n    }\n}\n\nclass EditArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            text: '',\n            currentId: 0,\n            xPos: 0,\n            yPos: 0,\n            xPosGlobal: 0,\n            yPosGlobal: 0,\n            caretPos: 0,\n            caretSet: false,\n            selector: ''\n        };\n\n        this.onTextChange = this.onTextChange.bind(this);\n        this.onTextClick = this.onTextClick.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n    }\n\n    onTextChange(e) {\n        let editNow = [e.target.name][0],\n            otherInput = [e.target.name][0],\n            defaultValue = '';\n        if (editNow === 'title') {\n            otherInput = 'text';\n            defaultValue = this.props.text;\n        } else {\n            otherInput = 'title';\n            defaultValue = this.props.title;\n        }\n        if (this.state.currentId !== this.props.markId) {\n            this.setState({[otherInput]: defaultValue, currentId: this.props.markId});\n        }\n        this.setState({[editNow]: e.target.value});\n        let mark = JSON.parse(localStorage.getItem('mark' + this.props.markId));\n        mark[editNow] = e.target.value;\n        localStorage.setItem('mark' + this.props.markId, JSON.stringify(mark));\n        this.props.onEditMark();\n    }\n\n    onTextClick(e) {\n        let range = window.getSelection().getRangeAt(0);\n        let preCaret = range.cloneRange();\n        preCaret.selectNodeContents(e.target);\n        preCaret.setEnd(range.endContainer, range.endOffset);\n        let caret = preCaret.toString().length;\n\n        let selector = range.endContainer.parentElement.className;\n\n        let rect = e.target.getBoundingClientRect();\n        this.setState({\n            xPos: e.clientX - rect.left, yPos: e.clientY - rect.top,\n            xPosGlobal: e.clientX, yPosGlobal: e.clientY,\n            caretPos: caret, selector: selector\n        });\n        this.props.onShowEdit();\n    }\n\n    onEdit() {\n        this.setState({caretSet: false})\n        this.props.onEditEnable();\n    }\n\n    componentDidUpdate() {\n        if (this.props.editEnable && !this.state.caretSet && this.state.selector !== '') {\n            this.setState({caretSet: true});\n            document.getElementsByClassName(this.state.selector + '-edit')[0].focus();\n            document.getElementsByClassName(this.state.selector + '-edit')[0].selectionStart = this.state.caretPos;\n        }\n    }\n\n    render() {\n        return (\n            !this.props.editEnable ? (\n                <div className='main_area__edit-container'>\n                    <div className='edit-container__title' onClick={this.onTextClick}>\n                        {this.props.title}\n                    </div>\n                    <div className='edit-container__text' onClick={this.onTextClick}\n                         dangerouslySetInnerHTML={{__html: this.props.text.replace(/\\n/g, '<br/>')}}>\n                    </div>\n                    {this.props.showEdit ? (\n                        <EditButton onEditEnable={this.onEdit} markId={this.props.markId}\n                                    style={{\n                                        position: 'absolute',\n                                        left: this.state.xPos - 50,\n                                        top: this.state.yPos + 10\n                                    }}>\n                            Редактировать\n                        </EditButton>\n                    ) : null\n                    }\n                </div>\n            ) : (\n                <div className='main_area__edit-container'>\n                    <input className='edit-container__title-edit' type=\"text\" name=\"title\"\n                           placeholder=\"Заголовок заметки\"\n                           value={this.state.currentId !== this.props.markId ? this.props.title : this.state.title}\n                           onChange={this.onTextChange}/>\n                    <textarea className='edit-container__text-edit' type=\"text\" name=\"text\"\n                              placeholder=\"Текст заметки\"\n                              value={this.state.currentId !== this.props.markId ? (this.props.text) : this.state.text}\n                              onChange={this.onTextChange}/>\n                </div>\n            )\n        )\n    }\n}\n\n\nclass SearchForm\n    extends React\n        .Component {\n    constructor(props) {\n        super(props);\n        this.state = {word: '', searchd: []};\n\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n        this.levenshteinDistance = this.levenshteinDistance.bind(this);\n    }\n\n    levenshteinDistance(a, b) {\n        if (a.length === 0) return b.length;\n        if (b.length === 0) return a.length;\n\n        let matrix = [];\n\n        for (let i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n        for (let j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n\n        for (let i = 1; i <= b.length; i++) {\n            for (let j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1,\n                        Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));\n                }\n            }\n        }\n\n        return matrix[b.length][a.length];\n    };\n\n    onChangeSearch(event) {\n        this.setState({word: event.target.value});\n        if (event.target.value.length === 0) {\n            this.props.onSearchMark([], false);\n            return;\n        }\n        const titleArray = this.props.mark;\n        this.setState({searchd: []});\n        for (let i = 0; i < titleArray.length; i++) {\n            let keyWord = titleArray[i].title.split(' ');\n            for (let j = 0; j < keyWord.length; j++) {\n                if (keyWord[j].toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1) {\n                    this.setState(prevState => ({\n                        searchd: [...prevState.searchd, titleArray[i]]\n                    }))\n                } else if (this.levenshteinDistance(event.target.value.toLowerCase(), keyWord[j].toLowerCase()) < keyWord[j].length - 3) {\n                    this.setState(prevState => ({\n                        searchd: [...prevState.searchd, titleArray[i]]\n                    }))\n                }\n\n            }\n        }\n        const uniqueNames = this.state.searchd.filter((val, id, array) => array.indexOf(val) === id);\n        this.props.onSearchMark(uniqueNames, true);\n\n    }\n\n    render() {\n        return <input type=\"text\" className=\"main-area__input\" placeholder=\"Поиск...\"\n                      value={this.state.word}\n                      onChange={this.onChangeSearch}/>\n    }\n}\n\nclass SortForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sort: localStorage.getItem(\"sort\") == null ? 'desc' : localStorage.getItem(\"sort\"),\n            showDropdown: false\n        };\n\n        this.onChangeSelect = this.onChangeSelect.bind(this);\n        this.onOpenDropDown = this.onOpenDropDown.bind(this);\n    }\n\n    onChangeSelect(event) {\n        let sort = event.target.getAttribute('value');\n        this.props.onChangeSortMark(sort);\n        localStorage.setItem('sort', sort);\n\n        this.setState({sort: sort});\n    }\n\n    onOpenDropDown() {\n        this.setState({showDropdown: !this.state.showDropdown});\n    }\n\n    render() {\n        return (\n            <div className=\"main-area__select-container\">\n                <div className=\"select-container__select-label\">\n                    Сортировать по:\n                </div>\n                <div className=\"select-container__select-button\" onClick={this.onOpenDropDown}>\n                    {this.state.sort === 'desc' ? ('убыванию даты') : ('возрастанию даты')}\n                    {this.state.showDropdown ? (\n                        <div className=\"select-container__dropdown\">\n                            <div className=\"select-container__dropdown-button\" onClick={this.onChangeSelect}\n                                 value=\"desc\">\n                                убыванию даты\n                            </div>\n                            <div className=\"select-container__dropdown-button\" onClick={this.onChangeSelect}\n                                 value=\"asc\">\n                                возрастанию даты\n                            </div>\n                        </div>\n                    ) : null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Area extends React.Component {\n    render() {\n        return (\n            <div className=\"main-area\">\n                <div className=\"main-area__left\">\n                    <div className=\"main-area__controls-left\">\n                        {this.props.addButton}\n                        {this.props.searchForm}\n                        {this.props.sortForm}\n                    </div>\n                    {this.props.getList}\n                </div>\n                {this.props.editShow ? (\n                    <div className=\"main-area__right\">\n                        <div className=\"main-area__controls-right\">\n                            {this.props.editButton}\n                            {this.props.deleteButton}\n                        </div>\n                        {this.props.editArea}\n                    </div>\n                ) : null\n                }\n            </div>\n        )\n    }\n}\n\nclass GetList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeMark = this.onChangeMark.bind(this);\n    }\n\n    onChangeMark(id, title, text) {\n        this.props.onChangeActiveMark(id, title, text);\n    }\n\n    render() {\n        const marks = this.props.mark.map((mark) => {\n            return <MarkButton key={mark.id} mark={mark} onChangeMark={this.onChangeMark}\n                               onDeleteMark={this.props.onDeleteMark}/>\n        });\n        return (<div className=\"main-area__mark-container\">{marks}</div>);\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0, title: '', text: '', mark: [], searchd: [],\n            sort: localStorage.getItem(\"sort\") == null ? 'desc' : localStorage.getItem(\"sort\"),\n            loaded: false, changed: false, filtered: false, editShow: false, editEnable: false, showEdit: false\n        };\n\n        this.onChangeMark = this.onChangeMark.bind(this);\n        this.onChangeActiveMark = this.onChangeActiveMark.bind(this);\n        this.onChangeSortMark = this.onChangeSortMark.bind(this);\n        this.onSearchMark = this.onSearchMark.bind(this);\n        this.onEditEnable = this.onEditEnable.bind(this);\n        this.onEditMark = this.onEditMark.bind(this);\n        this.onShowEdit = this.onShowEdit.bind(this);\n        this.loadLocalStorage = this.loadLocalStorage.bind(this);\n    }\n\n    onChangeMark() {\n        this.setState({changed: true, editShow: false, editEnable: false, showEdit: false});\n    }\n\n    onChangeActiveMark(id, title, text) {\n        this.setState({id: id, title: title, text: text, editShow: true, editEnable: false, showEdit: false});\n    }\n\n    onChangeSortMark(sort) {\n        this.setState({changed: true, sort: sort});\n    }\n\n    onSearchMark(searchd, filtered) {\n        this.setState({searchd: searchd, filtered: filtered});\n    }\n\n    onEditEnable() {\n        this.setState({editEnable: true})\n    }\n\n    onShowEdit() {\n        this.setState({showEdit: true})\n    }\n\n    onEditMark() {\n        this.setState({changed: true});\n    }\n\n    componentDidMount() {\n        if (!this.state.loaded) {\n            this.loadLocalStorage();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.changed) {\n            this.loadLocalStorage();\n            if (this.state.filtered) {\n                this.sortRenderedMark(this.state.searchd, this.state.filtered);\n            }\n        }\n    }\n\n    loadLocalStorage() {\n        let marksArray = [];\n        for (this.mark in localStorage) {\n            if (this.mark.indexOf('mark') !== -1) {\n                marksArray.push(JSON.parse(localStorage[this.mark]));\n            }\n\n        }\n        this.sortRenderedMark(marksArray, false)\n        this.setState({mark: marksArray});\n        this.setState({loaded: true});\n    }\n\n    sortRenderedMark(marksArray, filtered) {\n        if (this.state.sort === 'desc') {\n            marksArray = marksArray.sort((a, b) => b.id - a.id);\n        } else {\n            marksArray = marksArray.sort((a, b) => a.id - b.id);\n        }\n        if (!filtered) {\n            this.setState({mark: marksArray});\n        } else {\n            this.setState({searchd: marksArray});\n        }\n        this.setState({changed: false});\n    }\n\n    render() {\n        let addButton = (<AddButton onAddMark={this.onChangeMark}>+ Заметка</AddButton>);\n        let editButton = (\n            <EditButton onEditEnable={this.onEditEnable} markId={this.state.id}>Редактировать</EditButton>);\n        let deleteButton = (<DeleteButton type={'normal'} onDeleteMark={this.onChangeMark}\n                                          markId={this.state.id}>Удалить</DeleteButton>);\n        let searchForm = (<SearchForm onSearchMark={this.onSearchMark} mark={this.state.mark}/>);\n        let sortForm = (<SortForm onChangeSortMark={this.onChangeSortMark} sort={this.state.sort}/>);\n        let getList = (<GetList onChangeActiveMark={this.onChangeActiveMark} onDeleteMark={this.onChangeMark}\n                                sort={this.state.sort}\n                                mark={this.state.filtered ? this.state.searchd : this.state.mark}/>);\n        let editArea = (<EditArea title={this.state.title} text={this.state.text}\n                                  markId={this.state.id} editEnable={this.state.editEnable}\n                                  showEdit={this.state.showEdit}\n                                  onEditMark={this.onEditMark} onEditEnable={this.onEditEnable}\n                                  onShowEdit={this.onShowEdit}/>);\n        return (\n            <Area\n                addButton={addButton}\n                editButton={editButton}\n                deleteButton={deleteButton}\n                searchForm={searchForm}\n                sortForm={sortForm}\n                getList={getList}\n                editArea={editArea}\n                editShow={this.state.editShow}\n            />\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}